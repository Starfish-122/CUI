@use 'sass:math';
@use 'sass:list';
@use 'sass:map';

/// @return {Url}
/// @param {String} $base - 기본 URL
/// @param {String} $path - 자산 경로
/// @return {Url} - 자산 URL
/// * 사용예시: asset($base, $path);
@function asset($base, $path) {
    @return url($base + $path);
}

/// @return {Url}
/// @param {String} $path - 이미지 경로
/// @param {String} $base - 기본 URL (기본값: $base-url)
/// @return {Url} - 이미지 URL
/// * 사용예시: img("image.jpg", $base-url);
@function img($path, $base: $base-url) {
    @return asset($base, $path);
    // @return asset($base, $path);
}

// 소수점 3자리까지 반올림
/// @return {Number} - 소수점 값
@function decimal-round($point) {
    @return math.div(math.round($point * 1000), 1000);
}

// 간격 계산 (rem 단위)
/// @param {Number} $gap - 간격 (픽셀)
/// @param {Number} $context - 기본 폰트 크기 (기본값: 16px)
/// @return {Number} - rem 단위 값
/// * 사용예시: margin: gap-rem(20);
@function gap-rem($gap, $context: 16) {
    @return to-rem($gap, $context);
}

// 단위 제거 함수
/// @param {Number} $number - 단위를 제거할 숫자
/// @return {Number} - 단위가 없는 숫자
@function strip-unit($number) {
    @if type-of($number) == 'number' and not unitless($number) {
        @return math.div($number, $number * 0 + 1);
    }

    @return $number;
}

/// @return {Number}
/// @param {Number} $pixels - 변환할 픽셀 값
/// @param {Number} $context - 기본 폰트 크기 (기본값: 16px)
/// @return {Number} - rem 단위 값
/// * 사용예시: max-width: f.to-rem(1024);
@function to-rem($pixels, $context: 16) {
    @return decimal-round(math.div($pixels, $context) * 1rem);
}
